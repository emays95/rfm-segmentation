#name: CI/CD Pipeline
#
#on:
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]
#
#jobs:
#  build-test-docker:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout repo
#        uses: actions/checkout@v4
#
#      - name: Set up Python
#        uses: actions/setup-python@v5
#        with:
#          python-version: "3.11"
#
#      - name: Install dependencies
#        run: |
#          pip install -r python/requirements.txt
#
#      - name: Run Python tests
#        run: pytest python/tests --maxfail=1 --disable-warnings -q
#
#      - name: Build Docker image
#        run: docker build -t ghcr.io/${{ github.repository }}/etl:latest .
#
#      - name: Login to GitHub Container Registry
#        uses: docker/login-action@v3
#        with:
#          registry: ghcr.io
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Push Docker image
#        run: docker push ghcr.io/${{ github.repository }}/etl:latest
#
#  docs-deploy:
#    runs-on: ubuntu-latest
#    needs: build-test-docker
#    steps:
#      - name: Checkout repo
#        uses: actions/checkout@v4
#
#      - name: Setup Pages
#        uses: actions/configure-pages@v5
#
#      - name: Build Docs with MkDocs
#        run: |
#          pip install mkdocs mkdocs-material
#          mkdocs build --clean
#
#      - name: Upload artifact
#        uses: actions/upload-pages-artifact@v3
#        with:
#          path: site
#
#      - name: Deploy to GitHub Pages
#        id: deployment
#        uses: actions/deploy-pages@v4
#
#
#  test-db:
#    runs-on: ubuntu-latest
#    services:
#      postgres:
#        image: postgres:15
#        env:
#          POSTGRES_USER: bi_user
#          POSTGRES_PASSWORD: bi_password
#          POSTGRES_DB: bi_project
#        ports:
#          - 5432:5432
#        options: >-
#          --health-cmd pg_isready
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5
#
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Install Python deps
#        run: pip install -r python/requirements.txt
#
#      - name: Run tests against Postgres
#        run: pytest python/tests
#        env:
#          DATABASE_URL: postgres://bi_user:bi_password@localhost:5432/bi_project
#
